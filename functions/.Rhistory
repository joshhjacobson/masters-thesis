model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
source("functions/grid_arrange_shared_legend.R")
source("grid_arrange_shared_legend.R")
dat <- matrix(fields$variable1,dim,dim)
dim <- sqrt(length(fields$variable1))
dat <- matrix(fields$variable1,dim,dim)
p0 <- ggplot(dat) + geom_raster()
?data.frame
dat <- data.frame(matrix(fields$variable1,dim,dim))
View(dat)
View(dat)
p0 <- ggplot(dat) + geom_raster()
p0
ggplot(dat) + geom_raster()
ggplot(dat) + geom_raster(aes(fill = density))
ggplot(data=dat) + geom_raster(aes(fill = density))
ggplot(data=dat) + geom_raster()
View(dat)
?png
source('~/GitHub/random-fields/functions/build_ensemble.R')
build_ensemble(0.8, plot=TRUE
)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
source('~/GitHub/random-fields/functions/build_ensemble.R')
?combn
x <- seq(0, 10, length.out = 100)
y <- seq(-1, 1, length.out = 20)
d1 <- expand.grid(x = x, y = y)
View(d1)
x <- y <- seq(-20, 20, 0.2)
d1 <- expand.grid(x = x, y = y)
View(d1)
xi = 0.8
xi <- 0.8
x <- y <- seq(-20, 20, 0.2)
smooth <- c(1.5, 1.5, 1.5)
scale <- c(3, 3, 3) # set all to 1
corr <- c(1, 1)
rho <- 0.8
# ensemble
model_whittle <- RMwhittle(nu = smooth[1], notinvnu = TRUE,
scale = scale[1], var = corr[1])
omega <- replicate(n, RFsimulate(model_whittle, x, y)$variable1)
# model
model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
xi <- 0.8
n <- 11
if (is.null(x) | is.null(y)) {
x <- y <- seq(-20, 20, 0.2)
}
# parameters
smooth <- c(1.5, 1.5, 1.5)
scale <- c(3, 3, 3) # set all to 1
corr <- c(1, 1)
rho <- 0.8
# ensemble
model_whittle <- RMwhittle(nu = smooth[1], notinvnu = TRUE,
scale = scale[1], var = corr[1])
omega <- replicate(n, RFsimulate(model_whittle, x, y)$variable1)
# model
model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
xi <- 0.8
n <- 11
x <- y <- seq(-20, 20, 0.2)
# parameters
smooth <- c(1.5, 1.5, 1.5)
scale <- c(3, 3, 3) # set all to 1
corr <- c(1, 1)
rho <- 0.8
# ensemble
model_whittle <- RMwhittle(nu = smooth[1], notinvnu = TRUE,
scale = scale[1], var = corr[1])
omega <- replicate(n, RFsimulate(model_whittle, x, y)$variable1)
# model
model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
# format data as xyz dataframe
dat <- expand.grid(x = x, y = y)
dat["z"] <- fields$variable1
View(dat)
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z))
library(ggplot2)
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z))
plot(fields)
quartz()
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z))
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_brewer(palette = "Blues")
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_brewer()
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_color_brewer(palette = "Blues")
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_color_brewer(palette = "Blues")
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_distiller(palette = "Blues")
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_brewer(palette = "Blues")
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_color_brewer(palette = "Blues")
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_color_brewer(palette = "Blues", direction = -1)
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z))
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_color_brewer(palette = "Blues", direction = -1)
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_brewer(palette = "Blues", direction = -1)
require(RColorBrewer)
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(10, "Blues"))
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))
quartz()
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))
#            main="Observation")
# for (index in 1:ncol(ensemble)) {
#   image.plot(matrix(ensemble[,index],dim,dim), col=brewer.pal(9, "Blues"),
#              main=paste("Forecast", index))
# }
# quartz() #separate window for each ensemble
# for (index in 1:ncol(ensemble)) {
#   fields$variable2 <- ensemble[,index]
#   plot(fields)
# }
quartz()
plot(fields)
require(RandomFields)
require(fields)
require(RColorBrewer)
require(ggplot2)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
source('~/GitHub/random-fields/functions/build_ensemble.R')
test <- build_ensemble(0.8, plot=TRUE)
xi <- 0.8
n <- 11
x <- y <- seq(-20, 20, 0.2)
smooth <- c(1.5, 1.5, 1.5)
scale <- c(3, 3, 3) # set all to 1
corr <- c(1, 1)
rho <- 0.8
# ensemble
model_whittle <- RMwhittle(nu = smooth[1], notinvnu = TRUE,
scale = scale[1], var = corr[1])
omega <- replicate(n, RFsimulate(model_whittle, x, y)$variable1)
# model
model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
# format data as xyz dataframe
dat <- expand.grid(x = x, y = y)
dat["z"] <- fields$variable1
quartz()
View(dat)
ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))
p0
quartz()
plot(p0)
theme_bw()
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))
quartz()
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_dark()
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_linedraw()
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal()
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_light()
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal()
quartz()
plot(p0)
?theme
?theme_minimal
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
theme_update(axis.title.x=element_blank(),
axis.title.y=element_blank())
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation")
quartz()
plot(p0)
# center plot titles
theme_update(plot.title = element_text(hjust = 0.5))
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation")
quartz()
plot(p0)
# center plot titles
theme_update(plot.title = element_text(hjust = 0.5))
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation")
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation") +
theme_update(plot.title = element_text(hjust = 0.5))
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_update(plot.title = element_text(hjust = 0.5)) +
theme_minimal() +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation") +
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_update(plot.title = element_text(hjust = 0.5)) +
theme_minimal() +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation")
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
#scale_fill_brewer(palette = "Blues", direction = -1)
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
#theme_update(axis.title.x=element_blank(),
#             axis.title.y=element_blank())
labs(x="",y="",title="Observation")
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradient(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradient(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
rm(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradient(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
plot(p0)
min(dat$z)
max(dat$z)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues"),
limits=c(-4, 4), breaks=seq(-4,4,by=1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
quartz()
plot(p0)
plot(fields)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues"))+
#limits=c(-4, 4), breaks=seq(-4,4,by=1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
quartz()
plot(p0)
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues"),
limits=c(-4, 4), breaks=seq(-4,4,by=1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
quartz()
plot(p0)
xi <- 0.8
n <- 11
x <- y <- seq(-20, 20, 0.2)
smooth <- c(1.5, 1.5, 1.5)
scale <- c(3, 3, 3) # set all to 1
corr <- c(1, 1)
rho <- 0.8
## ensemble
model_whittle <- RMwhittle(nu = smooth[1], notinvnu = TRUE,
scale = scale[1], var = corr[1])
omega <- replicate(n, RFsimulate(model_whittle, x, y)$variable1)
## model
model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
require(RandomFields)
#require(fields)
require(RColorBrewer)
require(ggplot2)
## function to construct forecast ensemble
xi <- 0.8
n <- 11
x <- y <- seq(-20, 20, 0.2)
smooth <- c(1.5, 1.5, 1.5)
scale <- c(3, 3, 3) # set all to 1
corr <- c(1, 1)
rho <- 0.8
## ensemble
model_whittle <- RMwhittle(nu = smooth[1], notinvnu = TRUE,
scale = scale[1], var = corr[1])
omega <- replicate(n, RFsimulate(model_whittle, x, y)$variable1)
## model
model_biwm <- RMbiwm(nu = smooth, s = scale, cdiag = corr, rhored = rho)
fields <- RFsimulate(model_biwm, x, y)
zbar <- fields$variable2
zbar <- replicate(n, zbar)
ensemble <- xi*zbar + sqrt(1-xi^2)*omega
## format data as xyz dataframe
dat <- expand.grid(x = x, y = y)
dat["z"] <- fields$variable1
l.min <- round(min(fields$variable1))
l.max <- round(max(fields$variable1))
## collect each plot in a list
fplots <- list()
## Observation plot
p0 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues"),
limits=c(l.min, l.max),
breaks=seq(l.min,l.max,by=1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title="Observation")
fplots[[1]] <- p0
## Ensemble plots
for (i in 1:ncol(ensemble))
local({
i <- i
# update data being plotted
dat$z <- ensemble[,i]
p1 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues"),
limits=c(l.min, l.max),
breaks=seq(l.min,l.max,by=1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title=paste("Forecast", i, sep = ""))
# print(i)
# print(p1)
fplots[[i+1]] <<- p1  # add each plot into plot list
})
## arrange plots in grid
quartz()
grid_arrange_shared_legend(fplots, position = "right")
source("grid_arrange_shared_legend.R")
grid_arrange_shared_legend(fplots, position = "right")
?unit.c
source("grid_arrange_shared_legend.R")
## Ensemble plots
for (i in 1:ncol(ensemble))
local({
i <- i
# update data being plotted
dat$z <- ensemble[,i]
p1 <- ggplot(dat, aes(x, y)) +
geom_raster(aes(fill = z)) +
scale_fill_gradientn(colours = brewer.pal(9, "Blues"),
limits=c(l.min, l.max),
breaks=seq(l.min,l.max,by=1)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + # center title
labs(x="",y="",title=paste("Forecast", i, sep = ""))
# print(i)
# print(p1)
fplots[[i+1]] <<- p1  # add each plot into plot list
})
## arrange plots in grid
quartz()
grid_arrange_shared_legend(fplots, position = "right")
require(gridExtra)
grid_arrange_shared_legend(fplots, position = "right")
?unit.c
